# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
    build:
        docker:
            # specify the version you desire here
            - image: circleci/openjdk:11-browsers-legacy

            # Specify service dependencies here if necessary
            # CircleCI maintains a library of pre-built images
            # documented at https://circleci.com/docs/2.0/circleci-images/
            # - image: circleci/postgres:9.4

        working_directory: ~/guru-microservices/mssc-beer-service

        environment:
            # Customize the JVM maximum heap limit
            MAVEN_OPTS: -Xmx3200m

        steps:
            - checkout:
                path: ~/guru-microservices

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "pom.xml" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            - run: mvn dependency:go-offline

            - save_cache:
                  paths:
                      - ~/.m2
                  key: v1-dependencies-{{ checksum "pom.xml" }}

            # run tests!
            - run: mvn integration-test

    #--job 2 --
    build-job2:
        docker:
            # specify the version you desire here
            - image: circleci/openjdk:11-browsers-legacy

            # Specify service dependencies here if necessary
            # CircleCI maintains a library of pre-built images
            # documented at https://circleci.com/docs/2.0/circleci-images/
            # - image: circleci/postgres:9.4

        working_directory: ~/guru-microservices/mssc-beer-order-service

        environment:
            # Customize the JVM maximum heap limit
            MAVEN_OPTS: -Xmx3200m

        steps:
            - checkout:
                  path: ~/guru-microservices

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "pom.xml" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            - run: mvn dependency:go-offline

            - save_cache:
                  paths:
                      - ~/.m2
                  key: v1-dependencies-{{ checksum "pom.xml" }}

            # run tests!
            - run: mvn integration-test

    #--job 3--
    build-job3:
        docker:
            # specify the version you desire here
            - image: circleci/openjdk:11-browsers-legacy

            # Specify service dependencies here if necessary
            # CircleCI maintains a library of pre-built images
            # documented at https://circleci.com/docs/2.0/circleci-images/
            # - image: circleci/postgres:9.4

        working_directory: ~/guru-microservices/mssc-beer-inventory-service

        environment:
            # Customize the JVM maximum heap limit
            MAVEN_OPTS: -Xmx3200m

        steps:
            - checkout:
                  path: ~/guru-microservices

            # Download and cache dependencies
            - restore_cache:
                  keys:
                      - v1-dependencies-{{ checksum "pom.xml" }}
                      # fallback to using the latest cache if no exact match is found
                      - v1-dependencies-

            - run: mvn dependency:go-offline

            - save_cache:
                  paths:
                      - ~/.m2
                  key: v1-dependencies-{{ checksum "pom.xml" }}

            # run tests!
            - run: mvn integration-test

workflows:
    version: 2

    # workflow jobs are _not_ run in tag builds by default
    # we use filters to whitelist jobs that should be run for tags

    # workflow jobs are run in _all_ branch builds by default
    # we use filters to blacklist jobs that shouldn't be run for a branch

    # see: https://circleci.com/docs/2.0/workflows/#git-tag-job-execution

    build-test-push:
        jobs:
            - build:
                  filters:
                      tags:
                          only: /.*/

            - build-job2:
                  filters:
                      tags:
                          only: /.*/
            - build-job3:
                  filters:
                      tags:
                          only: /.*/